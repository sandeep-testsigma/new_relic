{"version":3,"file":"bel-serializer-Drj4mWQ1.js","sources":["../../node_modules/@newrelic/browser-agent/dist/esm/common/serialize/bel-serializer.js"],"sourcesContent":["/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { stringify } from '../util/stringify';\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar MAX_ATTRIBUTES = 64;\nexport function nullable(val, fn, comma) {\n  return val || val === 0 || val === '' ? fn(val) + (comma ? ',' : '') : '!';\n}\nexport function numeric(n, noDefault) {\n  if (noDefault) {\n    return Math.floor(n).toString(36);\n  }\n  return n === undefined || n === 0 ? '' : Math.floor(n).toString(36);\n}\nexport function getAddStringContext(obfuscator) {\n  let stringTableIdx = 0;\n  const stringTable = Object.prototype.hasOwnProperty.call(Object, 'create') ? Object.create(null) : {};\n  return addString;\n  function addString(str) {\n    if (typeof str === 'undefined' || str === '') return '';\n    str = obfuscator.obfuscateString(String(str));\n    if (hasOwnProp.call(stringTable, str)) {\n      return numeric(stringTable[str], true);\n    } else {\n      stringTable[str] = stringTableIdx++;\n      return quoteString(str);\n    }\n  }\n}\nexport function addCustomAttributes(attrs, addString) {\n  var attrParts = [];\n  Object.entries(attrs || {}).forEach(([key, val]) => {\n    if (attrParts.length >= MAX_ATTRIBUTES) return;\n    var type = 5;\n    var serializedValue;\n    // add key to string table first\n    key = addString(key);\n    switch (typeof val) {\n      case 'object':\n        if (val) {\n          // serialize objects to strings\n          serializedValue = addString(stringify(val));\n        } else {\n          // null attribute type\n          type = 9;\n        }\n        break;\n      case 'number':\n        type = 6;\n        // make sure numbers contain a `.` so they are parsed as doubles\n        serializedValue = val % 1 ? val : val + '.';\n        break;\n      case 'boolean':\n        type = val ? 7 : 8;\n        break;\n      case 'undefined':\n        // we treat undefined as a null attribute (since dirac does not have a concept of undefined)\n        type = 9;\n        break;\n      default:\n        serializedValue = addString(val);\n    }\n    attrParts.push([type, key + (serializedValue ? ',' + serializedValue : '')]);\n  });\n  return attrParts;\n}\nvar escapable = /([,\\\\;])/g;\nfunction quoteString(str) {\n  return \"'\" + str.replace(escapable, '\\\\$1');\n}"],"names":["hasOwnProp","MAX_ATTRIBUTES","nullable","val","fn","comma","numeric","n","noDefault","getAddStringContext","obfuscator","stringTableIdx","stringTable","addString","str","quoteString","addCustomAttributes","attrs","attrParts","key","type","serializedValue","stringify","escapable"],"mappings":"wCAMA,IAAIA,EAAa,OAAO,UAAU,eAC9BC,EAAiB,GACd,SAASC,EAASC,EAAKC,EAAIC,EAAO,CACvC,OAAOF,GAAOA,IAAQ,GAAKA,IAAQ,GAAKC,EAAGD,CAAG,GAAKE,EAAQ,IAAM,IAAM,GACzE,CACO,SAASC,EAAQC,EAAGC,EAAW,CACpC,OAAIA,EACK,KAAK,MAAMD,CAAC,EAAE,SAAS,EAAE,EAE3BA,IAAM,QAAaA,IAAM,EAAI,GAAK,KAAK,MAAMA,CAAC,EAAE,SAAS,EAAE,CACpE,CACO,SAASE,EAAoBC,EAAY,CAC9C,IAAIC,EAAiB,EACrB,MAAMC,EAAc,OAAO,UAAU,eAAe,KAAK,OAAQ,QAAQ,EAAI,OAAO,OAAO,IAAI,EAAI,CAAA,EACnG,OAAOC,EACP,SAASA,EAAUC,EAAK,CACtB,OAAI,OAAOA,EAAQ,KAAeA,IAAQ,GAAW,IACrDA,EAAMJ,EAAW,gBAAgB,OAAOI,CAAG,CAAC,EACxCd,EAAW,KAAKY,EAAaE,CAAG,EAC3BR,EAAQM,EAAYE,CAAG,EAAG,EAAI,GAErCF,EAAYE,CAAG,EAAIH,IACZI,EAAYD,CAAG,GAE5B,CACA,CACO,SAASE,EAAoBC,EAAOJ,EAAW,CACpD,IAAIK,EAAY,CAAA,EAChB,cAAO,QAAQD,GAAS,CAAA,CAAE,EAAE,QAAQ,CAAC,CAACE,EAAKhB,CAAG,IAAM,CAClD,GAAI,EAAAe,EAAU,QAAUjB,GACxB,KAAImB,EAAO,EACPC,EAGJ,OADAF,EAAMN,EAAUM,CAAG,EACX,OAAOhB,EAAG,CAChB,IAAK,SACCA,EAEFkB,EAAkBR,EAAUS,EAAUnB,CAAG,CAAC,EAG1CiB,EAAO,EAET,MACF,IAAK,SACHA,EAAO,EAEPC,EAAkBlB,EAAM,EAAIA,EAAMA,EAAM,IACxC,MACF,IAAK,UACHiB,EAAOjB,EAAM,EAAI,EACjB,MACF,IAAK,YAEHiB,EAAO,EACP,MACF,QACEC,EAAkBR,EAAUV,CAAG,CACvC,CACIe,EAAU,KAAK,CAACE,EAAMD,GAAOE,EAAkB,IAAMA,EAAkB,GAAG,CAAC,EAC/E,CAAG,EACMH,CACT,CACA,IAAIK,EAAY,YAChB,SAASR,EAAYD,EAAK,CACxB,MAAO,IAAMA,EAAI,QAAQS,EAAW,MAAM,CAC5C","x_google_ignoreList":[0]}