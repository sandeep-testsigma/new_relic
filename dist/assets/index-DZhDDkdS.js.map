{"version":3,"file":"index-DZhDDkdS.js","sources":["../../node_modules/@newrelic/browser-agent/dist/esm/features/spa/aggregate/interaction-node.js","../../node_modules/@newrelic/browser-agent/dist/esm/features/spa/aggregate/interaction.js","../../node_modules/@newrelic/browser-agent/dist/esm/features/spa/aggregate/serializer.js","../../node_modules/@newrelic/browser-agent/dist/esm/features/spa/aggregate/index.js"],"sourcesContent":["/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar MAX_NODES = 128;\nvar lastId = 0;\nexport function InteractionNode(interaction, parent, type, timestamp) {\n  Object.defineProperty(this, 'interaction', {\n    value: interaction,\n    writable: true // enumerable: false -- by default, which hides this prop from obj (iterations)\n  });\n  this.parent = parent;\n  this.id = ++lastId;\n  this.type = type;\n  this.children = [];\n  this.end = null;\n  this.jsEnd = this.start = timestamp;\n  this.jsTime = 0;\n  this.attrs = {};\n  this.cancelled = false;\n}\nvar InteractionNodePrototype = InteractionNode.prototype;\n\n/**\n * @param {string} type\n * @param {number} timestamp\n * @param {string} name\n * @param {bool} dontWait - When true, the interaction will not immediately start waiting\n *                          for this node to complete. This is used when the creation of\n *                          the node and its start happen at different times (e.g. XHR).\n */\nInteractionNodePrototype.child = function child(type, timestamp, name, dontWait) {\n  var interaction = this.interaction;\n  if (interaction.end || interaction.nodes >= MAX_NODES) return null;\n  interaction.onNodeAdded(this);\n  var node = new InteractionNode(interaction, this, type, timestamp);\n  node.attrs.name = name;\n  interaction.nodes++;\n  if (!dontWait) {\n    interaction.remaining++;\n  }\n  return node;\n};\nInteractionNodePrototype.callback = function addCallbackTime(exclusiveTime, end) {\n  var node = this;\n  node.jsTime += exclusiveTime;\n  if (end > node.jsEnd) {\n    node.jsEnd = end;\n    node.interaction.lastCb = end;\n  }\n};\nInteractionNodePrototype.cancel = function cancel() {\n  this.cancelled = true;\n  var interaction = this.interaction;\n  interaction.remaining--;\n};\nInteractionNodePrototype.finish = function finish(timestamp) {\n  var node = this;\n  if (node.end) return;\n  node.end = timestamp;\n\n  // Find the next parent node that is not cancelled\n  let parent = node.parent;\n  while (parent?.cancelled) parent = parent.parent;\n\n  // Assign the node to the non-cancelled parent node\n  if (parent) parent.children.push(node);\n  node.parent = null;\n\n  // Update the interaction remaining counter\n  var interaction = this.interaction;\n  interaction.remaining--;\n  interaction.lastFinish = timestamp;\n  // check if interaction has finished, (this is needed for older browsers for unknown reasons)\n  interaction.checkFinish();\n};","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { initialLocation } from '../../../common/constants/runtime';\nimport { gosNREUMOriginals } from '../../../common/window/nreum';\nimport { InteractionNode } from './interaction-node';\nvar originalSetTimeout = gosNREUMOriginals().o.ST;\nvar originalClearTimeout = gosNREUMOriginals().o.CT;\nvar lastId = {};\nexport function Interaction(eventName, timestamp, url, routeName, onFinished, agentRef) {\n  this.agentRef = agentRef;\n  lastId[agentRef.agentIdentifier] = 0;\n  this.id = ++lastId[agentRef.agentIdentifier];\n  this.eventName = eventName;\n  this.nodes = 0;\n  this.remaining = 0;\n  this.finishTimer = null;\n  this.checkingFinish = false;\n  this.lastCb = this.lastFinish = timestamp;\n  this.handlers = [];\n  this.onFinished = onFinished;\n  this.done = false;\n  var root = this.root = new InteractionNode(this, null, 'interaction', timestamp);\n  var attrs = root.attrs;\n  attrs.trigger = eventName;\n  attrs.initialPageURL = initialLocation;\n  attrs.oldRoute = routeName;\n  attrs.newURL = url;\n  attrs.oldURL = eventName === 'initialPageLoad' ? document.referrer : url;\n  attrs.custom = {};\n  attrs.store = {};\n}\nvar InteractionPrototype = Interaction.prototype;\nInteractionPrototype.checkFinish = function checkFinish() {\n  var interaction = this;\n  if (interaction.remaining > 0) {\n    interaction._resetFinishCheck();\n    return;\n  }\n  if (interaction.checkingFinish) {\n    return;\n  }\n  if (interaction.root.end !== null) return;\n  interaction._resetFinishCheck();\n  interaction.checkingFinish = true;\n  interaction.finishTimer = originalSetTimeout(() => {\n    interaction.checkingFinish = false;\n    interaction.finishTimer = originalSetTimeout(() => {\n      interaction.finishTimer = null;\n      if (interaction.remaining <= 0) interaction.finish();\n    }, 1);\n  }, 0);\n};\nInteractionPrototype.setNewURL = function setNewURL(url) {\n  this.root.attrs.newURL = url;\n};\nInteractionPrototype.setNewRoute = function setNewRoute(route) {\n  this.root.attrs.newRoute = route;\n};\nInteractionPrototype.onNodeAdded = function onNodeAdded() {\n  this._resetFinishCheck();\n};\nInteractionPrototype._resetFinishCheck = function _resetFinishCheck() {\n  if (this.finishTimer) {\n    originalClearTimeout(this.finishTimer);\n    this.finishTimer = null;\n    this.checkingFinish = false;\n  }\n};\n\n// serialize report and remove nodes from map\nInteractionPrototype.finish = function finishInteraction() {\n  var interaction = this;\n  var root = interaction.root;\n  if (root.end !== null) return;\n  var endTimestamp = Math.max(interaction.lastCb, interaction.lastFinish);\n  var attrs = root.attrs;\n  var customAttrs = attrs.custom;\n  if (this.onFinished) {\n    this.onFinished(this);\n  }\n  Object.entries(interaction.agentRef.info.jsAttributes || {}).forEach(([attr, value]) => {\n    if (!(attr in customAttrs)) customAttrs[attr] = value;\n  });\n  root.end = endTimestamp;\n  interaction.agentRef.ee.emit('interaction', [this]);\n};","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { cleanURL } from '../../../common/url/clean-url';\nimport { nullable, numeric, getAddStringContext, addCustomAttributes } from '../../../common/serialize/bel-serializer';\nexport class Serializer {\n  constructor(agentRef) {\n    this.obfuscator = agentRef.runtime.obfuscator;\n    this.info = agentRef.info;\n\n    /**\n     * This variable is used to calculate an interactions ending offset when the\n     * harvest includes multiple interactions. This variable is set by the first\n     * interaction processed and used by subsequent interactions in the same harvest.\n     * See https://issues.newrelic.com/browse/NEWRELIC-5498\n     * @type {number|undefined}\n     */\n    this.firstTimestamp = undefined;\n  }\n  serializeMultiple(interactions, offset, navTiming) {\n    var addString = getAddStringContext(this.obfuscator);\n    var serialized = 'bel.7';\n    interactions.forEach(interaction => {\n      serialized += ';' + this.serializeInteraction(interaction.root, offset, navTiming, interaction.routeChange, addString, this.info);\n    });\n    this.firstTimestamp = undefined;\n    return serialized;\n  }\n  serializeSingle(root, offset, navTiming, isRouteChange) {\n    var addString = getAddStringContext(this.obfuscator);\n    var serialized = 'bel.7;' + this.serializeInteraction(root, offset, navTiming, isRouteChange, addString, this.info);\n    this.firstTimestamp = undefined;\n    return serialized;\n  }\n  serializeInteraction(root, offset, navTiming, isRouteChange, addString, info) {\n    offset = offset || 0;\n    var isInitialPage = root.attrs.trigger === 'initialPageLoad';\n    var typeIdsByName = {\n      interaction: 1,\n      ajax: 2,\n      customTracer: 4\n    };\n\n    // Include the hash fragment with all SPA data\n    var includeHashFragment = true;\n    const addNode = (node, nodeList) => {\n      if (node.type === 'customEnd') return nodeList.push([3, numeric(node.end - this.firstTimestamp)]);\n      var typeName = node.type;\n      var typeId = typeIdsByName[typeName];\n      var startTimestamp = node.start;\n      var childCount = node.children.length;\n      var attrCount = 0;\n      var apmAttributes = info.atts;\n      var hasNavTiming = isInitialPage && navTiming.length && typeId === 1;\n      var children = [];\n      var attrs = node.attrs;\n      var metrics = attrs.metrics;\n      var params = attrs.params;\n      var queueTime = info.queueTime;\n      var appTime = info.applicationTime;\n      if (typeof this.firstTimestamp === 'undefined') {\n        startTimestamp += offset;\n        this.firstTimestamp = startTimestamp;\n      } else {\n        startTimestamp -= this.firstTimestamp;\n      }\n      var fields = [numeric(startTimestamp), numeric(node.end - node.start), numeric(node.jsEnd - node.end), numeric(node.jsTime)];\n      switch (typeId) {\n        case 1:\n          fields[2] = numeric(node.jsEnd - this.firstTimestamp);\n          fields.push(addString(attrs.trigger), addString(cleanURL(attrs.initialPageURL, includeHashFragment)), addString(cleanURL(attrs.oldURL, includeHashFragment)), addString(cleanURL(attrs.newURL, includeHashFragment)), addString(attrs.customName), isInitialPage ? '' : isRouteChange ? 1 : 2, nullable(isInitialPage && queueTime, numeric, true) + nullable(isInitialPage && appTime, numeric, true) + nullable(attrs.oldRoute, addString, true) + nullable(attrs.newRoute, addString, true) + addString(attrs.id), addString(node.id), nullable(attrs.firstPaint, numeric, true) + nullable(attrs.firstContentfulPaint, numeric, false));\n          var attrParts = addCustomAttributes(attrs.custom, addString);\n          children = children.concat(attrParts);\n          attrCount = attrParts.length;\n          if (apmAttributes) {\n            childCount++;\n            children.push('a,' + addString(apmAttributes));\n          }\n          break;\n        case 2:\n          fields.push(addString(params.method), numeric(params.status), addString(params.host), addString(params.pathname), numeric(metrics.txSize), numeric(metrics.rxSize), attrs.isFetch ? 1 : attrs.isJSONP ? 2 : '', addString(node.id), nullable(node.dt && node.dt.spanId, addString, true) + nullable(node.dt && node.dt.traceId, addString, true) + nullable(node.dt && node.dt.timestamp, numeric, false));\n\n          // add params.gql here\n          if (Object.keys(params?.gql || {}).length) {\n            var ajaxAttrParts = addCustomAttributes(params.gql, addString);\n            children = children.concat(ajaxAttrParts);\n            attrCount = ajaxAttrParts.length;\n          }\n          break;\n        case 4:\n          var tracedTime = attrs.tracedTime;\n          fields.push(addString(attrs.name), nullable(tracedTime, numeric, true) + addString(node.id));\n          break;\n      }\n      for (var i = 0; i < node.children.length; i++) {\n        addNode(node.children[i], children);\n      }\n      fields.unshift(numeric(typeId), numeric(childCount += attrCount));\n      nodeList.push(fields);\n      if (childCount) {\n        nodeList.push(children.join(';'));\n      }\n      if (hasNavTiming) {\n        // this build up the navTiming node\n        // it for each navTiming value (pre aggregated in nav-timing.js):\n        // we initialize the seperator to ',' (seperates the nodeType id from the first value)\n        // we initialize the navTiming node to 'b' (the nodeType id)\n        // if the value is present:\n        //   we add the seperator followed by the value\n        // otherwise\n        //   we add null seperator ('!') to the navTimingNode\n        //   we set the seperator to an empty string since we already wrote it above\n        //   the reason for writing the null seperator instead of setting the seperator\n        //   is to ensure we still write it if the null is the last navTiming value.\n\n        var seperator = ',';\n        var navTimingNode = 'b';\n        var prev = 0;\n\n        // get all navTiming values except navigationStart\n        // (since its the same as interaction.start)\n        // and limit to just the first 20 values we know about\n        Object.values(navTiming.slice(1, 21) || {}).forEach(v => {\n          if (v !== undefined) {\n            navTimingNode += seperator + numeric(v - prev);\n            seperator = ',';\n            prev = v;\n          } else {\n            navTimingNode += seperator + '!';\n            seperator = '';\n          }\n        });\n        nodeList.push(navTimingNode);\n      } else if (typeId === 1) {\n        nodeList.push('');\n      }\n      return nodeList;\n    };\n    return addNode(root, []).join(';');\n  }\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n/* eslint no-undef: \"error\" */\nimport { registerHandler as register } from '../../../common/event-emitter/register-handler';\nimport { parseUrl } from '../../../common/url/parse-url';\nimport { shouldCollectEvent } from '../../../common/deny-list/deny-list';\nimport { navTimingValues as navTiming } from '../../../common/timing/nav-timing';\nimport { generateUuid } from '../../../common/ids/unique-id';\nimport { Interaction } from './interaction';\nimport { eventListenerOpts } from '../../../common/event-listener/event-listener-opts';\nimport { Serializer } from './serializer';\nimport { ee } from '../../../common/event-emitter/contextual-ee';\nimport * as CONSTANTS from '../constants';\nimport { FEATURE_NAMES } from '../../../loaders/features/features';\nimport { AggregateBase } from '../../utils/aggregate-base';\nimport { firstContentfulPaint } from '../../../common/vitals/first-contentful-paint';\nimport { firstPaint } from '../../../common/vitals/first-paint';\nimport { bundleId } from '../../../common/ids/bundle-id';\nimport { initialLocation, loadedAsDeferredBrowserScript } from '../../../common/constants/runtime';\nimport { handle } from '../../../common/event-emitter/handle';\nimport { SUPPORTABILITY_METRIC_CHANNEL } from '../../metrics/constants';\nimport { warn } from '../../../common/util/console';\nconst {\n  FEATURE_NAME,\n  INTERACTION_EVENTS,\n  MAX_TIMER_BUDGET,\n  FN_START,\n  FN_END,\n  CB_START,\n  INTERACTION_API,\n  REMAINING,\n  INTERACTION,\n  SPA_NODE,\n  JSONP_NODE,\n  FETCH_START,\n  FETCH_DONE,\n  FETCH_BODY,\n  JSONP_END,\n  originalSetTimeout\n} = CONSTANTS;\nexport class Aggregate extends AggregateBase {\n  static featureName = FEATURE_NAME;\n  constructor(agentRef) {\n    super(agentRef, FEATURE_NAME);\n    const state = this.state = {\n      initialPageURL: initialLocation,\n      lastSeenUrl: initialLocation,\n      lastSeenRouteName: null,\n      timerMap: {},\n      timerBudget: MAX_TIMER_BUDGET,\n      currentNode: null,\n      prevNode: null,\n      nodeOnLastHashUpdate: null,\n      initialPageLoad: null,\n      pageLoaded: false,\n      childTime: 0,\n      depth: 0,\n      // The below feature flag is used to disable the SPA ajax fix for specific customers, see https://new-relic.atlassian.net/browse/NR-172169\n      disableSpaFix: (agentRef.init.feature_flags || []).indexOf('disable-spa-fix') > -1\n    };\n    this.spaSerializerClass = new Serializer(agentRef);\n    const classThis = this;\n    const baseEE = ee.get(agentRef.agentIdentifier); // <-- parent baseEE\n    const mutationEE = baseEE.get('mutation');\n    const promiseEE = baseEE.get('promise');\n    const historyEE = baseEE.get('history');\n    const eventsEE = baseEE.get('events'); // ajax --> ee(123).emit() ee()\n    const timerEE = baseEE.get('timer');\n    const fetchEE = baseEE.get('fetch');\n    const jsonpEE = baseEE.get('jsonp');\n    const xhrEE = baseEE.get('xhr');\n    const tracerEE = baseEE.get('tracer');\n\n    // childTime is used when calculating exclusive time for a cb duration.\n    //\n    // Exclusive time will be different than the total time for either callbacks\n    // which synchronously invoke a customTracer callback or, trigger a synchronous\n    // event (eg. onreadystate=1 or popstate).\n    //\n    // At fn-end, childTime will contain the total time of all timed callbacks and\n    // event handlers which executed as a child of the current callback. At the\n    // begining of every callback, childTime is saved to the event context (which at\n    // that time contains the sum of its preceeding siblings) and is reset to 0. The\n    // callback is then executed, and its children may increase childTime.  At the\n    // end of the callback, it reports its exclusive time as its\n    // execution time - exlcuded. childTime is then reset to its previous\n    // value, and the totalTime of the callback that just finished executing is\n    // added to the childTime time.\n    //                                    | clock | childTime | ctx.ct | totalTime | exclusive |\n    // click fn-start                     |   0   |    0     |    0   |           |           |\n    //  | click begining:                 |   5   |    0     |    0   |           |           |\n    //  |   | custom-1 fn-start           |   10  |    0     |    0   |           |           |\n    //  |   |   |  custom-1 begining      |   15  |    0     |    0   |           |           |\n    //  |   |   |    |  custom-2 fn-start |   20  |    0     |    0   |           |           |\n    //  |   |   |    |  | custom-2        |   25  |    0     |    0   |           |           |\n    //  |   |   |    |  custom-2 fn-end   |   30  |    10    |    0   |     10    |     10    |\n    //  |   |   |  custom-1 middle        |   35  |    10    |    0   |           |           |\n    //  |   |   |    |  custom-3 fn-start |   40  |    0     |    10  |           |           |\n    //  |   |   |    |  | custom-3        |   45  |    0     |    10  |           |           |\n    //  |   |   |    |  custom-3 fn-end   |   50  |    20    |    0   |     10    |     10    |\n    //  |   |   |  custom-1 ending        |   55  |    20    |    0   |           |           |\n    //  |     custom-1 fn-end             |   60  |    50    |    0   |     50    |     30    |\n    //  | click ending:                   |   65  |    50    |        |           |           |\n    // click fn-end                       |   70  |    0     |    0   |     70    |     20    |\n\n    let harvester;\n    this.waitForFlags(['spa']).then(([spaFlag]) => {\n      if (spaFlag) {\n        harvester = agentRef.runtime.harvester; // since this is after RUM call, PVE would've initialized harvester by now\n        this.drain();\n      } else {\n        this.blocked = true;\n        this.deregisterDrain();\n      }\n    });\n    if (agentRef.init.spa.enabled !== true) return;\n    state.initialPageLoad = new Interaction('initialPageLoad', 0, state.lastSeenUrl, state.lastSeenRouteName, onInteractionFinished, agentRef);\n    state.initialPageLoad.save = true;\n    if (agentRef.runtime.session?.isNew) state.initialPageLoad.root.attrs.custom.isFirstOfSession = true; // mark the hard page load as first of its session\n    state.prevInteraction = state.initialPageLoad;\n    state.currentNode = state.initialPageLoad.root; // hint\n    // ensure that checkFinish calls are safe during initialPageLoad\n    state.initialPageLoad[REMAINING]++;\n    register(FN_START, callbackStart, this.featureName, baseEE);\n    register(CB_START, callbackStart, this.featureName, promiseEE);\n\n    // register plugins\n    var pluginApi = {\n      getCurrentNode,\n      setCurrentNode\n    };\n    register('spa-register', function (init) {\n      if (typeof init === 'function') {\n        init(pluginApi);\n      }\n    }, FEATURE_NAMES.spa, baseEE);\n    function callbackStart() {\n      state.depth++;\n      this.prevNode = state.currentNode;\n      this.ct = state.childTime;\n      state.childTime = 0;\n      state.timerBudget = MAX_TIMER_BUDGET;\n    }\n    register(FN_END, callbackEnd, this.featureName, baseEE);\n    register('cb-end', callbackEnd, this.featureName, promiseEE);\n    function callbackEnd() {\n      state.depth--;\n      var totalTime = this.jsTime || 0;\n      var exclusiveTime = totalTime - state.childTime;\n      state.childTime = this.ct + totalTime;\n      if (state.currentNode) {\n        // transfer accumulated callback time to the active interaction node\n        // run even if jsTime is 0 to update jsEnd\n        state.currentNode.callback(exclusiveTime, this[FN_END]);\n        if (this.isTraced) {\n          state.currentNode.attrs.tracedTime = exclusiveTime;\n        }\n      }\n      this.jsTime = state.currentNode ? 0 : exclusiveTime;\n      setCurrentNode(this.prevNode);\n      this.prevNode = null;\n      state.timerBudget = MAX_TIMER_BUDGET;\n    }\n    register(FN_START, function (args, eventSource) {\n      var ev = args[0];\n      var evName = ev.type;\n      var eventNode = ev[\"__nrNode:\".concat(bundleId)];\n      if (!state.pageLoaded && (evName === 'load' && eventSource === window || loadedAsDeferredBrowserScript)) {\n        state.pageLoaded = true;\n        // set to null so prevNode is set correctly\n        this.prevNode = state.currentNode = null;\n        if (state.initialPageLoad) {\n          eventNode = state.initialPageLoad.root;\n\n          // Even if initialPageLoad has remaining callbacks, force the initialPageLoad\n          // interaction to complete when the page load event occurs.\n          state.initialPageLoad[REMAINING] = 0;\n          originalSetTimeout(function () {\n            INTERACTION_EVENTS.push('popstate');\n          });\n        }\n      }\n      if (eventNode) {\n        // If we've already seen a previous handler for this specific event object,\n        // just restore that. We want multiple handlers for the same event to share\n        // a node.\n        setCurrentNode(eventNode);\n      } else if (evName === 'hashchange') {\n        setCurrentNode(state.nodeOnLastHashUpdate);\n        state.nodeOnLastHashUpdate = null;\n      } else if (eventSource instanceof XMLHttpRequest) {\n        // If this event was emitted by an XHR, restore the node ID associated with\n        // that XHR.\n        setCurrentNode(baseEE.context(eventSource).spaNode);\n      } else if (!state.currentNode && INTERACTION_EVENTS.indexOf(evName) !== -1) {\n        // Otherwise, if no interaction is currently active, create a new node ID,\n        // and let the aggregator know that we entered a new event handler callback\n        // so that it has a chance to possibly start an interaction.\n        var ixn = new Interaction(evName, this[FN_START], state.lastSeenUrl, state.lastSeenRouteName, onInteractionFinished, agentRef);\n\n        // Store the interaction as prevInteraction in case it is prematurely discarded\n        state.prevInteraction = ixn;\n        setCurrentNode(ixn.root);\n        if (evName === 'click') {\n          var value = getActionText(ev.target);\n          if (value) {\n            state.currentNode.attrs.custom.actionText = value;\n          }\n        }\n      }\n      ev[\"__nrNode:\".concat(bundleId)] = state.currentNode;\n    }, this.featureName, eventsEE);\n\n    /**\n     * *** TIMERS ***\n     * setTimeout call needs to keep the interaction active in case a node is started\n     * in its callback.\n     */\n\n    // The context supplied to this callback will be shared with the fn-start/fn-end\n    // callbacks that fire around the callback passed to setTimeout originally.\n    register('setTimeout-end', function saveId(args, obj, timerId) {\n      if (!state.currentNode || state.timerBudget - this.timerDuration < 0) return;\n      if (args && !(args[0] instanceof Function)) return;\n      state.currentNode[INTERACTION][REMAINING]++;\n      this.timerId = timerId;\n      state.timerMap[timerId] = state.currentNode;\n      this.timerBudget = state.timerBudget - 50;\n    }, this.featureName, timerEE);\n    register('clearTimeout-start', function clear(args) {\n      var timerId = args[0];\n      var node = state.timerMap[timerId];\n      if (node) {\n        var interaction = node[INTERACTION];\n        interaction[REMAINING]--;\n        interaction.checkFinish();\n        delete state.timerMap[timerId];\n      }\n    }, this.featureName, timerEE);\n    register(FN_START, function () {\n      state.timerBudget = this.timerBudget || MAX_TIMER_BUDGET;\n      var id = this.timerId;\n      var node = state.timerMap[id];\n      setCurrentNode(node);\n      delete state.timerMap[id];\n      if (node) node[INTERACTION][REMAINING]--;\n    }, this.featureName, timerEE);\n\n    /**\n     * *** XHR ***\n     * - `new-xhr` event is fired when new instance of XHR is created. Here we create\n     *    a new node and store it on the XHR object.\n     * -  When the send method is called (`send-xhr-start` event), we tell the interaction\n     *    to wait for this XHR to complete.\n     * -  When any direct event handlers are invoked (`fn-start` on the `xhr` emitter),\n     *    we restore the node in case other child nodes are started here.\n     * -  Callbacks attached using `addEventListener` are handled using `fn-start` on the\n     *    `events` emitter.\n     * -  When `xhr-resolved` is emitted, we end the node. The node.finish() call also\n     *    instructs the interaction to stop waiting for this node.\n     */\n\n    // context is shared with new-xhr event, and is stored on the xhr iteself.\n    register(FN_START, function () {\n      setCurrentNode(this[SPA_NODE]);\n    }, this.featureName, xhrEE);\n\n    // context is stored on the xhr and is shared with all callbacks associated\n    // with the new xhr\n    register('new-xhr', function () {\n      if (!state.disableSpaFix && !state.currentNode && state.prevInteraction && !state.prevInteraction.ignored) {\n        /*\n         * The previous interaction was discarded before a route change. Restore the interaction\n         * in case this XHR is associated with a route change.\n         */\n        const interaction = state.prevInteraction;\n        state.currentNode = interaction.root;\n        interaction.root.end = null;\n      }\n      if (state.currentNode) {\n        this[SPA_NODE] = state.currentNode.child('ajax', null, null, true);\n      }\n    }, this.featureName, xhrEE);\n    register('send-xhr-start', function () {\n      var node = this[SPA_NODE];\n      if (node && !this.sent) {\n        this.sent = true;\n        node.dt = this.dt;\n        if (node.dt?.timestamp) {\n          node.dt.timestamp = agentRef.runtime.timeKeeper.correctAbsoluteTimestamp(node.dt.timestamp);\n        }\n        node.jsEnd = node.start = this.startTime;\n        node[INTERACTION][REMAINING]++;\n      }\n    }, this.featureName, xhrEE);\n    register('xhr-resolved', function () {\n      var node = this[SPA_NODE];\n      if (node) {\n        if (!shouldCollectEvent(this.params)) {\n          node.cancel();\n          return;\n        }\n        var attrs = node.attrs;\n        attrs.params = this.params;\n        attrs.metrics = this.metrics;\n        node.finish(this.endTime);\n        if (!!this.currentNode && !!this.currentNode.interaction) this.currentNode.interaction.checkFinish();\n      }\n    }, this.featureName, baseEE);\n\n    /**\n     * *** JSONP ***\n     *\n     */\n\n    register('new-jsonp', function (url) {\n      if (state.currentNode) {\n        var node = this[JSONP_NODE] = state.currentNode.child('ajax', this[FETCH_START]);\n        node.start = this['new-jsonp'];\n        this.url = url;\n        this.status = null;\n      }\n    }, this.featureName, jsonpEE);\n    register('cb-start', function (args) {\n      var node = this[JSONP_NODE];\n      if (node) {\n        setCurrentNode(node);\n        this.status = 200;\n      }\n    }, this.featureName, jsonpEE);\n    register('jsonp-error', function () {\n      var node = this[JSONP_NODE];\n      if (node) {\n        setCurrentNode(node);\n        this.status = 0;\n      }\n    }, this.featureName, jsonpEE);\n    register(JSONP_END, function () {\n      var node = this[JSONP_NODE];\n      if (node) {\n        // if no status is set then cb never fired - so it's not a valid JSONP\n        if (this.status === null) {\n          node.cancel();\n          return;\n        }\n        var attrs = node.attrs;\n        var params = attrs.params = {};\n        var parsed = parseUrl(this.url);\n        params.method = 'GET';\n        params.pathname = parsed.pathname;\n        params.host = parsed.hostname + ':' + parsed.port;\n        params.status = this.status;\n        attrs.metrics = {\n          txSize: 0,\n          rxSize: 0\n        };\n        attrs.isJSONP = true;\n        node.jsEnd = this[JSONP_END];\n        node.jsTime = this[CB_START] ? this[JSONP_END] - this[CB_START] : 0;\n        node.finish(node.jsEnd);\n      }\n    }, this.featureName, jsonpEE);\n    register(FETCH_START, function (fetchArguments, dtPayload) {\n      if (fetchArguments) {\n        if (!state.disableSpaFix && !state.currentNode && state.prevInteraction && !state.prevInteraction.ignored) {\n          /*\n           * The previous interaction was discarded before a route change. Restore the interaction\n           * in case this XHR is associated with a route change.\n           */\n          const interaction = state.prevInteraction;\n          state.currentNode = interaction.root;\n          interaction.root.end = null;\n        }\n        if (state.currentNode) {\n          this[SPA_NODE] = state.currentNode.child('ajax', this[FETCH_START]);\n          if (dtPayload && this[SPA_NODE]) {\n            this[SPA_NODE].dt = dtPayload;\n            if (this[SPA_NODE].dt?.timestamp) {\n              this[SPA_NODE].dt.timestamp = agentRef.runtime.timeKeeper.correctAbsoluteTimestamp(this[SPA_NODE].dt.timestamp);\n            }\n          }\n        }\n      }\n    }, this.featureName, fetchEE);\n    register(FETCH_BODY + 'start', function (args) {\n      if (state.currentNode) {\n        this[SPA_NODE] = state.currentNode;\n        state.currentNode[INTERACTION][REMAINING]++;\n      }\n    }, this.featureName, fetchEE);\n    register(FETCH_BODY + 'end', function (args, ctx, bodyPromise) {\n      var node = this[SPA_NODE];\n      if (node) node[INTERACTION][REMAINING]--;\n    }, this.featureName, fetchEE);\n    register(FETCH_DONE, function (err, res) {\n      var node = this[SPA_NODE];\n      if (node) {\n        if (err || !shouldCollectEvent(this.params)) {\n          node.cancel();\n          return;\n        }\n        var attrs = node.attrs;\n        attrs.params = this.params;\n        attrs.metrics = {\n          txSize: this.txSize,\n          rxSize: this.rxSize\n        };\n        attrs.isFetch = true;\n        node.finish(this[FETCH_DONE]);\n      }\n    }, this.featureName, fetchEE);\n    register('newURL', function (url, hashChangedDuringCb) {\n      if (state.currentNode) {\n        state.currentNode[INTERACTION].setNewURL(url);\n      } else if (state.prevInteraction && !state.prevInteraction.ignored) {\n        /*\n         * The previous interaction was discarded before the route was changed. This can happen in SPA\n         * frameworks when using lazy loading. We have also seen this in version 11+ of Nextjs where\n         * some route changes re-use cached resolved promises.\n         */\n        const interaction = state.prevInteraction;\n        interaction.setNewURL(url);\n        interaction.root.end = null;\n        setCurrentNode(interaction.root);\n      }\n      if (state.currentNode) {\n        if (state.lastSeenUrl !== url) {\n          state.currentNode[INTERACTION].routeChange = true;\n        }\n        if (hashChangedDuringCb) {\n          state.nodeOnLastHashUpdate = state.currentNode;\n        }\n      }\n      state.lastSeenUrl = url;\n    }, this.featureName, historyEE);\n\n    /**\n     * SCRIPTS\n     *   This is only needed to keep the interaction open while external scripts are being loaded.\n     *   The script that is loaded could continue the interaction by making additional AJAX\n     *   calls or changing the URL. The interaction context (currentNode) needs to be\n     *   restored somehow, but this differs based on the specific customer code. In some cases, we\n     *   could wrap a JSONP callback, in other cases we could wrap a higher-level API, and in\n     *   some cases we may not be able to restore context automatically (customer would need\n     *   to instrument their code manually).\n     *\n     * - We do not restore the original context in the load/error callbacks. This would not\n     *   work for the scripts themselves because by the time the load event fires, the\n     *   script content has already been executed.\n     */\n\n    // dom-start is emitted when appendChild or replaceChild are called. If the element being\n    // inserted is script and we are inside an interaction, we will keep the interaction open\n    // until the script is loaded.\n    jsonpEE.on('dom-start', function (args) {\n      if (!state.currentNode) return;\n      var el = args[0];\n      var isScript = el && el.nodeName === 'SCRIPT' && el.src !== '';\n      var interaction = state.currentNode.interaction;\n      if (isScript) {\n        // increase remaining count to keep the interaction open\n        interaction[REMAINING]++;\n        el.addEventListener('load', onload, eventListenerOpts(false));\n        el.addEventListener('error', onerror, eventListenerOpts(false));\n      }\n      function onload() {\n        // decrease remaining to allow interaction to finish\n        interaction[REMAINING]--;\n\n        // checkFinish is what initiates closing interaction, but is only called\n        // when setCurrentNode is called. Since we are not restoring a node here,\n        // we need to initiate the check manually.\n        // The reason we are not restoring the node here is because 1) this is not\n        // where the code of the external script runs (by the time the load event\n        // fires, it has already executed), and 2) it would require storing the context\n        // probably on the DOM node and restoring in all callbacks, which is a different\n        // use case than lazy loading.\n        interaction.checkFinish();\n      }\n      function onerror() {\n        interaction[REMAINING]--;\n        interaction.checkFinish();\n      }\n    });\n    register(FN_START, function () {\n      setCurrentNode(state.prevNode);\n    }, this.featureName, mutationEE);\n    register('resolve-start', resolvePromise, this.featureName, promiseEE);\n    register('executor-err', resolvePromise, this.featureName, promiseEE);\n    register('propagate', saveNode, this.featureName, promiseEE);\n    register(CB_START, function () {\n      var ctx = this.getCtx ? this.getCtx() : this;\n      setCurrentNode(ctx[SPA_NODE]);\n    }, this.featureName, promiseEE);\n    register(INTERACTION_API + 'get', function (t) {\n      var interaction;\n      if (state?.currentNode?.[INTERACTION]) interaction = this.ixn = state.currentNode[INTERACTION];else if (state?.prevNode?.end === null && state?.prevNode?.[INTERACTION]?.root?.[INTERACTION]?.eventName !== 'initialPageLoad') interaction = this.ixn = state.prevNode[INTERACTION];else interaction = this.ixn = new Interaction('api', t, state.lastSeenUrl, state.lastSeenRouteName, onInteractionFinished, agentRef);\n      if (!state.currentNode) {\n        interaction.checkFinish();\n        if (state.depth) setCurrentNode(interaction.root);\n      }\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'actionText', function (t, actionText) {\n      var customAttrs = this.ixn.root.attrs.custom;\n      if (actionText) customAttrs.actionText = actionText;\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'setName', function (t, name, trigger) {\n      var attrs = this.ixn.root.attrs;\n      if (name) attrs.customName = name;\n      if (trigger) attrs.trigger = trigger;\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'setAttribute', function (t, name, value) {\n      this.ixn.root.attrs.custom[name] = value;\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'end', function (timestamp) {\n      var interaction = this.ixn;\n      var node = activeNodeFor(interaction);\n      setCurrentNode(null);\n      node.child('customEnd', timestamp)?.finish(timestamp);\n      interaction.finish();\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'ignore', function (t) {\n      this.ixn.ignored = true;\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'save', function (t) {\n      this.ixn.save = true;\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'tracer', function (timestamp, name, store) {\n      var interaction = this.ixn;\n      var parent = activeNodeFor(interaction);\n      var ctx = baseEE.context(store);\n      if (!name) {\n        ctx.inc = ++interaction[REMAINING];\n        return ctx[SPA_NODE] = parent;\n      }\n      ctx[SPA_NODE] = parent.child('customTracer', timestamp, name);\n    }, this.featureName, baseEE);\n    register(FN_START, tracerDone, this.featureName, tracerEE);\n    register('no-' + FN_START, tracerDone, this.featureName, tracerEE);\n    function tracerDone(timestamp, interactionContext, hasCb) {\n      var node = this[SPA_NODE];\n      if (!node) return;\n      var interaction = node[INTERACTION];\n      var inc = this.inc;\n      this.isTraced = true;\n      if (inc) {\n        interaction[REMAINING]--;\n      } else if (node) {\n        node.finish(timestamp);\n      }\n      hasCb ? setCurrentNode(node) : interaction.checkFinish();\n    }\n    register(INTERACTION_API + 'getContext', function (t, cb) {\n      var store = this.ixn.root.attrs.store;\n      setTimeout(function () {\n        cb(store);\n      }, 0);\n    }, this.featureName, baseEE);\n    register(INTERACTION_API + 'onEnd', function (t, cb) {\n      this.ixn.handlers.push(cb);\n    }, this.featureName, baseEE);\n    register('api-routeName', function (t, currentRouteName) {\n      state.lastSeenRouteName = currentRouteName;\n      if (state.currentNode) state.currentNode[INTERACTION].setNewRoute(currentRouteName);\n    }, this.featureName, baseEE);\n    function activeNodeFor(interaction) {\n      return state.currentNode && state.currentNode[INTERACTION] === interaction ? state.currentNode : interaction.root;\n    }\n    function saveNode(val, overwrite) {\n      if (overwrite || !this[SPA_NODE]) this[SPA_NODE] = state.currentNode;\n    }\n    function resolvePromise() {\n      if (!this.resolved) {\n        this.resolved = true;\n        this[SPA_NODE] = state.currentNode;\n      }\n    }\n    function getCurrentNode() {\n      return state.currentNode;\n    }\n    function setCurrentNode(newNode) {\n      if (!state.pageLoaded && !newNode && state.initialPageLoad) newNode = state.initialPageLoad.root;\n      if (state.currentNode) {\n        state.currentNode[INTERACTION].checkFinish();\n      }\n      state.prevNode = state.currentNode;\n      state.currentNode = newNode && !newNode[INTERACTION].root.end ? newNode : null;\n    }\n    function onInteractionFinished(interaction) {\n      if (interaction === state.initialPageLoad) state.initialPageLoad = null;\n      var root = interaction.root;\n      var attrs = root.attrs;\n\n      // make sure that newrelic[INTERACTION]() works in end handler\n      state.currentNode = root;\n      Object.values(interaction.handlers || {}).forEach(function (cb) {\n        cb(attrs.store);\n      });\n      setCurrentNode(null);\n    }\n    baseEE.on('spa-jserror', function (type, name, params, metrics) {\n      if (!state.currentNode) return;\n      params._interactionId = state.currentNode.interaction.id;\n      // do not capture parentNodeId when in root node\n      if (state.currentNode.type && state.currentNode.type !== 'interaction') {\n        params._interactionNodeId = state.currentNode.id;\n      }\n    });\n    register('function-err', function (args, obj, error) {\n      if (!state.currentNode) return;\n      error.__newrelic ??= {};\n      error.__newrelic[agentRef.agentIdentifier] = {\n        interactionId: state.currentNode.interaction.id\n      };\n      if (state.currentNode.type && state.currentNode.type !== 'interaction') {\n        error.__newrelic[agentRef.agentIdentifier].interactionNodeId = state.currentNode.id;\n      }\n    }, this.featureName, baseEE);\n    baseEE.on('interaction', saveInteraction);\n    function getActionText(node) {\n      var nodeType = node.tagName.toLowerCase();\n      var goodNodeTypes = ['a', 'button', 'input'];\n      var isGoodNode = goodNodeTypes.indexOf(nodeType) !== -1;\n      if (isGoodNode) {\n        return node.title || node.value || node.innerText;\n      }\n    }\n    function saveInteraction(interaction) {\n      if (interaction.ignored || !interaction.save && !interaction.routeChange) {\n        baseEE.emit('interactionDone', [interaction, false]);\n        return;\n      }\n      if (state.prevInteraction === interaction) {\n        // If the interaction is being saved, remove it from prevInteraction variable\n        // to prevent the interaction from possibly being sent twice or causing an internal\n        // recursive loop issue.\n        state.prevInteraction = null;\n      }\n\n      // assign unique id, this is serialized and used to link interactions with errors\n      interaction.root.attrs.id = generateUuid();\n      if (interaction.root.attrs.trigger === 'initialPageLoad') {\n        interaction.root.attrs.firstPaint = firstPaint.current.value;\n        interaction.root.attrs.firstContentfulPaint = firstContentfulPaint.current.value;\n      }\n      baseEE.emit('interactionDone', [interaction, true]);\n      classThis.events.add(interaction);\n      let smCategory;\n      if (interaction.root?.attrs?.trigger === 'initialPageLoad') smCategory = 'InitialPageLoad';else if (interaction.routeChange) smCategory = 'RouteChange';else smCategory = 'Custom';\n      handle(SUPPORTABILITY_METRIC_CHANNEL, [\"Spa/Interaction/\".concat(smCategory, \"/Duration/Ms\"), Math.max((interaction.root?.end || 0) - (interaction.root?.start || 0), 0)], undefined, FEATURE_NAMES.metrics, baseEE);\n      if (!harvester) {\n        warn(19);\n        return;\n      }\n      harvester.triggerHarvestFor(classThis);\n    }\n  }\n  serializer(eventBuffer) {\n    return this.spaSerializerClass.serializeMultiple(eventBuffer, 0, navTiming);\n  }\n}"],"names":["MAX_NODES","lastId","InteractionNode","interaction","parent","type","timestamp","InteractionNodePrototype","name","dontWait","node","exclusiveTime","end","originalSetTimeout","gosNREUMOriginals","originalClearTimeout","Interaction","eventName","url","routeName","onFinished","agentRef","root","attrs","initialLocation","InteractionPrototype","route","endTimestamp","customAttrs","attr","value","Serializer","interactions","offset","navTiming","addString","getAddStringContext","serialized","isRouteChange","info","isInitialPage","typeIdsByName","includeHashFragment","addNode","nodeList","numeric","typeName","typeId","startTimestamp","childCount","attrCount","apmAttributes","hasNavTiming","children","metrics","params","queueTime","appTime","fields","cleanURL","nullable","attrParts","addCustomAttributes","ajaxAttrParts","tracedTime","i","seperator","navTimingNode","prev","v","FEATURE_NAME","INTERACTION_EVENTS","MAX_TIMER_BUDGET","FN_START","FN_END","CB_START","INTERACTION_API","REMAINING","INTERACTION","SPA_NODE","JSONP_NODE","FETCH_START","FETCH_DONE","FETCH_BODY","JSONP_END","CONSTANTS","Aggregate","AggregateBase","state","classThis","baseEE","ee","mutationEE","promiseEE","historyEE","eventsEE","timerEE","fetchEE","jsonpEE","xhrEE","tracerEE","harvester","spaFlag","onInteractionFinished","register","callbackStart","pluginApi","getCurrentNode","setCurrentNode","init","FEATURE_NAMES","callbackEnd","totalTime","args","eventSource","ev","evName","eventNode","bundleId","loadedAsDeferredBrowserScript","ixn","getActionText","obj","timerId","id","shouldCollectEvent","parsed","parseUrl","fetchArguments","dtPayload","ctx","bodyPromise","err","res","hashChangedDuringCb","el","isScript","onload","eventListenerOpts","onerror","resolvePromise","saveNode","t","actionText","trigger","activeNodeFor","store","tracerDone","interactionContext","hasCb","inc","cb","currentRouteName","val","overwrite","newNode","error","saveInteraction","nodeType","goodNodeTypes","isGoodNode","generateUuid","firstPaint","firstContentfulPaint","smCategory","handle","SUPPORTABILITY_METRIC_CHANNEL","warn","eventBuffer"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}