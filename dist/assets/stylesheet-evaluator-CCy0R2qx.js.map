{"version":3,"file":"stylesheet-evaluator-CCy0R2qx.js","sources":["../../node_modules/@newrelic/browser-agent/src/features/session_replay/shared/stylesheet-evaluator.js"],"sourcesContent":["/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { gosNREUMOriginals } from '../../../common/window/nreum'\nimport { isBrowserScope } from '../../../common/constants/runtime'\n\nclass StylesheetEvaluator {\n  #evaluated = new WeakSet()\n  #brokenSheets = []\n  /**\n  * Flipped to true if stylesheets that cannot be natively inlined are detected by the stylesheetEvaluator class\n  * Used at harvest time to denote that all subsequent payloads are subject to this and customers should be advised to handle crossorigin decoration\n  * */\n  invalidStylesheetsDetected = false\n  failedToFix = 0\n\n  /**\n   * this works by checking (only ever once) each cssRules obj in the style sheets array. The try/catch will catch an error if the cssRules obj blocks access, triggering the module to try to \"fix\" the asset`. Returns the count of incomplete assets discovered.\n   * @returns {Number}\n   */\n  evaluate () {\n    let incompletes = 0\n    this.#brokenSheets = []\n    if (isBrowserScope) {\n      for (let i = 0; i < Object.keys(document.styleSheets).length; i++) {\n        if (!this.#evaluated.has(document.styleSheets[i]) && document.styleSheets[i] instanceof CSSStyleSheet) {\n          this.#evaluated.add(document.styleSheets[i])\n          try {\n            // eslint-disable-next-line\n            const temp = document.styleSheets[i].cssRules\n          } catch (err) {\n            if (!document.styleSheets[i].href) return\n            incompletes++\n            this.#brokenSheets.push(document.styleSheets[i])\n          }\n        }\n      }\n    }\n    if (incompletes) this.invalidStylesheetsDetected = true\n    return incompletes\n  }\n\n  /**\n   * Resolves promise once all stylesheets have been fetched and overridden\n   * @returns {Promise}\n   */\n  async fix () {\n    await Promise.all(this.#brokenSheets.map(sheet => this.#fetchAndOverride(sheet)))\n    this.#brokenSheets = []\n    const failedToFix = this.failedToFix\n    this.failedToFix = 0\n    return failedToFix\n  }\n\n  /**\n * Fetches stylesheet contents and overrides the target getters\n * @param {*} target - The stylesheet object target - ex. document.styleSheets[0]\n * @param {*} href - The asset href to fetch\n * @returns {Promise}\n */\n  async #fetchAndOverride (target) {\n    if (!target?.href) return\n    try {\n      const stylesheetContents = await gosNREUMOriginals().o.FETCH.bind(window)(target.href)\n      if (!stylesheetContents.ok) {\n        this.failedToFix++\n        return\n      }\n      const stylesheetText = await stylesheetContents.text()\n      try {\n        const cssSheet = new CSSStyleSheet()\n        await cssSheet.replace(stylesheetText)\n        Object.defineProperty(target, 'cssRules', {\n          get () { return cssSheet.cssRules }\n        })\n        Object.defineProperty(target, 'rules', {\n          get () { return cssSheet.rules }\n        })\n      } catch (err) {\n      // cant make new dynamic stylesheets, browser likely doesn't support `.replace()`...\n      // this is appended in prep of forking rrweb\n        Object.defineProperty(target, 'cssText', {\n          get () { return stylesheetText }\n        })\n        this.failedToFix++\n      }\n    } catch (err) {\n    // failed to fetch\n      this.failedToFix++\n    }\n  }\n}\n\nexport const stylesheetEvaluator = new StylesheetEvaluator()\n"],"names":["StylesheetEvaluator","#evaluated","#brokenSheets","incompletes","isBrowserScope","i","temp","sheet","#fetchAndOverride","failedToFix","target","stylesheetContents","gosNREUMOriginals","stylesheetText","cssSheet","stylesheetEvaluator"],"mappings":"+CAOA,MAAMA,CAAoB,CACxBC,GAAa,IAAI,QACjBC,GAAgB,CAAA,EAKhB,2BAA6B,GAC7B,YAAc,EAMd,UAAY,CACV,IAAIC,EAAc,EAElB,GADA,KAAKD,GAAgB,CAAA,EACjBE,GACF,QAASC,EAAI,EAAGA,EAAI,OAAO,KAAK,SAAS,WAAW,EAAE,OAAQA,IAC5D,GAAI,CAAC,KAAKJ,GAAW,IAAI,SAAS,YAAYI,CAAC,CAAC,GAAK,SAAS,YAAYA,CAAC,YAAa,cAAe,CACrG,KAAKJ,GAAW,IAAI,SAAS,YAAYI,CAAC,CAAC,EAC3C,GAAI,CAEF,MAAMC,EAAO,SAAS,YAAYD,CAAC,EAAE,QACjD,MAAwB,CACZ,GAAI,CAAC,SAAS,YAAYA,CAAC,EAAE,KAAM,OACnCF,IACA,KAAKD,GAAc,KAAK,SAAS,YAAYG,CAAC,CAAC,CAC3D,CACA,EAGI,OAAIF,IAAa,KAAK,2BAA6B,IAC5CA,CACX,CAME,MAAM,KAAO,CACX,MAAM,QAAQ,IAAI,KAAKD,GAAc,IAAIK,GAAS,KAAKC,GAAkBD,CAAK,CAAC,CAAC,EAChF,KAAKL,GAAgB,CAAA,EACrB,MAAMO,EAAc,KAAK,YACzB,YAAK,YAAc,EACZA,CACX,CAQE,KAAMD,GAAmBE,EAAQ,CAC/B,GAAKA,GAAQ,KACb,GAAI,CACF,MAAMC,EAAqB,MAAMC,EAAiB,EAAG,EAAE,MAAM,KAAK,MAAM,EAAEF,EAAO,IAAI,EACrF,GAAI,CAACC,EAAmB,GAAI,CAC1B,KAAK,cACL,MACR,CACM,MAAME,EAAiB,MAAMF,EAAmB,KAAI,EACpD,GAAI,CACF,MAAMG,EAAW,IAAI,cACrB,MAAMA,EAAS,QAAQD,CAAc,EACrC,OAAO,eAAeH,EAAQ,WAAY,CACxC,KAAO,CAAE,OAAOI,EAAS,QAAQ,CAC3C,CAAS,EACD,OAAO,eAAeJ,EAAQ,QAAS,CACrC,KAAO,CAAE,OAAOI,EAAS,KAAK,CACxC,CAAS,CACT,MAAoB,CAGZ,OAAO,eAAeJ,EAAQ,UAAW,CACvC,KAAO,CAAE,OAAOG,CAAc,CACxC,CAAS,EACD,KAAK,aACb,CACA,MAAkB,CAEZ,KAAK,aACX,CACA,CACA,CAEY,MAACE,EAAsB,IAAIf","x_google_ignoreList":[0]}